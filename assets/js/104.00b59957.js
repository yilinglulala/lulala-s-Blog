(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{594:function(v,t,a){"use strict";a.r(t);var _=a(3),e=Object(_.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("ul",[a("li",[v._v("概念题")])]),v._v(" "),a("p",[v._v("是什么，为什么，怎么办")]),v._v(" "),a("ul",[a("li",[v._v("a,和b区别题")])]),v._v(" "),a("p",[v._v("a和b分别是啥，相同点，区别点，什么场景用什么特性")]),v._v(" "),a("h1",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[v._v("#")]),v._v(" vue")]),v._v(" "),a("p",[v._v("构建用户界面的"),a("strong",[v._v("渐进式")]),v._v("javascript框架")]),v._v(" "),a("p",[v._v("渐进式：自底向上逐层的应用。简单应用可以只使用轻量的核心库，复杂应用可以引入各种vue插件")]),v._v(" "),a("h2",{attrs:{id:"vue优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue优点"}},[v._v("#")]),v._v(" vue优点")]),v._v(" "),a("ol",[a("li",[v._v("渐进式轻量级框架")]),v._v(" "),a("li",[v._v("采用组件化模式，便于代码复用和代码维护")]),v._v(" "),a("li",[v._v("数据驱动，只需关系数据变化，减少DOM的操作")]),v._v(" "),a("li",[v._v("使用虚拟DOM+diff算法，尽量复用DOM节点")]),v._v(" "),a("li",[v._v("简易上手，文档无障碍，生态丰富")])]),v._v(" "),a("h2",{attrs:{id:"命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[v._v("#")]),v._v(" 命名")]),v._v(" "),a("p",[v._v("组件：大驼峰")]),v._v(" "),a("h2",{attrs:{id:"key的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key的作用"}},[v._v("#")]),v._v(" key的作用")]),v._v(" "),a("p",[v._v("需要使用key来给每个节点做一个唯一标识，Diff算法就可以正确的识别此节点。\n作用主要是为了高效的更新虚拟DOM。")]),v._v(" "),a("h2",{attrs:{id:"为什么data需要是函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么data需要是函数"}},[v._v("#")]),v._v(" 为什么data需要是函数")]),v._v(" "),a("p",[v._v("因为如果是对象的话，复用组件的data属性会共用一个对象，就会相互影响。")]),v._v(" "),a("p",[v._v("如果是函数，每次复用都会生成一个新的对象，不会相互影响")]),v._v(" "),a("h2",{attrs:{id:"v-for和v-if的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for和v-if的优先级"}},[v._v("#")]),v._v(" v-for和v-if的优先级")]),v._v(" "),a("p",[v._v("结论：v-for的优先级比较高")]),v._v(" "),a("p",[v._v("因此应该尽量避免v-for和v-if同时使用")]),v._v(" "),a("p",[v._v("可以在computed属性中先将数据过滤出来")]),v._v(" "),a("h2",{attrs:{id:"v-show和v-if的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-show和v-if的区别"}},[v._v("#")]),v._v(" v-show和v-if的区别")]),v._v(" "),a("p",[a("strong",[v._v("同：")])]),v._v(" "),a("p",[v._v("两者都可以控制元素的显示隐藏")]),v._v(" "),a("p",[a("strong",[v._v("不同：")])]),v._v(" "),a("p",[v._v("v-show是通过"),a("code",[v._v("display:none")]),v._v("实现，文档中依然可以查找到该元素")]),v._v(" "),a("p",[v._v("v-if将元素从文档中添加或者移除元素，无法查找到。因此v-if的销毁和创建比较耗费性能")]),v._v(" "),a("p",[a("strong",[v._v("场景：")])]),v._v(" "),a("p",[v._v("如果需要频繁切换显示隐藏的可以考虑用"),a("code",[v._v("v-show")]),v._v(",反之考虑用"),a("code",[v._v("v-if")])]),v._v(" "),a("h2",{attrs:{id:"watch和computed区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch和computed区别"}},[v._v("#")]),v._v(" watch和computed区别")]),v._v(" "),a("p",[v._v("computed不能开启异步任务")]),v._v(" "),a("p",[v._v("computed:\n　　　　当一个属性受多个属性影响的时候就需要用到computed\n　　　　最典型的栗子： 购物车商品结算的时候\nwatch:\n　　　　当一条数据影响多条数据的时候就需要用watch\n　　　　栗子：搜索数据")]),v._v(" "),a("h2",{attrs:{id:"new-vue做了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-vue做了什么"}},[v._v("#")]),v._v(" new Vue做了什么")]),v._v(" "),a("ol",[a("li",[a("p",[v._v("首先初始化了生命周期（初始化一些vue实例上的参数）")])]),v._v(" "),a("li",[a("p",[v._v("初始化事件监听器（如：$on $off）")])]),v._v(" "),a("li",[a("p",[v._v("初始化render函数（模板渲染函数）")])]),v._v(" "),a("li",[a("p",[v._v("调用beforeCreate钩子函数")])]),v._v(" "),a("li",[a("p",[v._v("初始化 inject 函数")])]),v._v(" "),a("li",[a("p",[v._v("initState，初始化组件的各种状态（重要，响应式就在这里进行处理）")])]),v._v(" "),a("li",[a("p",[v._v("初始化 provide 函数")])]),v._v(" "),a("li",[a("p",[v._v("调用created钩子函数")])]),v._v(" "),a("li",[a("p",[v._v("beforemounted")])]),v._v(" "),a("li",[a("p",[v._v("挂在到真实DOM")])]),v._v(" "),a("li",[a("p",[v._v("mouted")])])]),v._v(" "),a("h2",{attrs:{id:"响应式原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式原理"}},[v._v("#")]),v._v(" 响应式原理")]),v._v(" "),a("p",[v._v("Object.defineProperty()方法，进行数据劫持")]),v._v(" "),a("h2",{attrs:{id:"v-model原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model原理"}},[v._v("#")]),v._v(" v-model原理")]),v._v(" "),a("p",[v._v("v-model是双向绑定的语法糖，")]),v._v(" "),a("ol",[a("li",[v._v('v-bind:value="",')]),v._v(" "),a("li",[v._v('v-on:input=""')])]),v._v(" "),a("h2",{attrs:{id:"mvvm-框架是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-框架是什么"}},[v._v("#")]),v._v(" MVVM 框架是什么")]),v._v(" "),a("p",[v._v("M, Model 模型对应data中的数据")]),v._v(" "),a("p",[v._v("V，view视图：模板")]),v._v(" "),a("p",[v._v("VM，viewModel 视图对象，Vue的实例对象")]),v._v(" "),a("h2",{attrs:{id:"mvvm和mvc的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm和mvc的区别"}},[v._v("#")]),v._v(" MVVM和MVC的区别")]),v._v(" "),a("h2",{attrs:{id:"虚拟dom是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom是什么"}},[v._v("#")]),v._v(" 虚拟DOM是什么")]),v._v(" "),a("p",[v._v("真实DOM 的描述，本质也是一个对象")]),v._v(" "),a("h2",{attrs:{id:"diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[v._v("#")]),v._v(" diff算法")]),v._v(" "),a("h2",{attrs:{id:"nexttick是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nexttick是什么"}},[v._v("#")]),v._v(" 🐤 $nextTick是什么")]),v._v(" "),a("p",[v._v("在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM")]),v._v(" "),a("p",[v._v("https://segmentfault.com/a/1190000012861862")]),v._v(" "),a("p",[v._v("当你修改了data的值然后马上获取这个dom元素的值，是不能获取到更新后的值，\n你需要使用$nextTick这个回调，让修改后的data值渲染更新到dom元素之后在获取，才能成功")]),v._v(" "),a("h2",{attrs:{id:"keep-alive是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive是什么"}},[v._v("#")]),v._v(" keep-alive是什么")]),v._v(" "),a("p",[v._v("Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染。")]),v._v(" "),a("p",[v._v("🎏")]),v._v(" "),a("h2",{attrs:{id:"父子组件通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件通信"}},[v._v("#")]),v._v(" 父子组件通信")]),v._v(" "),a("ul",[a("li",[v._v("父 -> 子")])]),v._v(" "),a("p",[v._v("props")]),v._v(" "),a("ul",[a("li",[v._v("子->父")])]),v._v(" "),a("p",[v._v("$emit")]),v._v(" "),a("h2",{attrs:{id:"vue生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期"}},[v._v("#")]),v._v(" Vue生命周期")]),v._v(" "),a("h1",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[v._v("#")]),v._v(" vuex")]),v._v(" "),a("p",[v._v("是什么")]),v._v(" "),a("blockquote",[a("p",[v._v("是状态管理")])]),v._v(" "),a("p",[v._v("为什么")]),v._v(" "),a("ol",[a("li",[v._v("当作缓存")]),v._v(" "),a("li",[v._v("不同组件共用")])]),v._v(" "),a("p",[v._v("怎么做")]),v._v(" "),a("blockquote",[a("p",[v._v("State、 Getter、Mutation 、Action、 🔥Module")])]),v._v(" "),a("h1",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[v._v("#")]),v._v(" vue-router")]),v._v(" "),a("h2",{attrs:{id:"懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#懒加载"}},[v._v("#")]),v._v(" 懒加载")]),v._v(" "),a("p",[v._v("🎏vue异步组件技术")]),v._v(" "),a("p",[v._v('()=>import("xxx")')]),v._v(" "),a("h1",{attrs:{id:"vue和react-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue和react-的区别"}},[v._v("#")]),v._v(" Vue和react 的区别")])])}),[],!1,null,null,null);t.default=e.exports}}]);